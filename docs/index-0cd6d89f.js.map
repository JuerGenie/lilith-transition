{"version":3,"file":"index-0cd6d89f.js","sources":["../node_modules/lilith-transition/dist/painter/index.js"],"sourcesContent":["function t(t,e,n){const r=Reflect.ownKeys(e),u=class{static get inputProperties(){return r}};u.prototype.paint=n,registerPaint(t,u);}Object.freeze({__proto__:null,[Symbol.toStringTag]:\"Module\",get_current_path:function(t){return t.substring(0,t.lastIndexOf(\"/\"))},get_text:async function(t){return await fetch(t).then((t=>t.text()))}});var n=Object.freeze({__proto__:null,[Symbol.toStringTag]:\"Module\",get_values:function(t){return Object.keys(t).map((e=>t[e]))}});const r={is_style_value:!0},u={is_unit_value:!0},o={is_keyword_value:!0};function s(t){return t}function i(t){Object.keys(t).forEach((e=>{CSS.registerProperty(t[e]);}));}\n\nvar TransitionProperties;\r\n(function (TransitionProperties) {\r\n    // 颜色\r\n    TransitionProperties[\"COLOR\"] = \"--lilith-transition-color\";\r\n    // 过渡长度\r\n    TransitionProperties[\"LENGHT\"] = \"--lilith-transition-length\";\r\n    // 过渡方向，横向（horizontal）与纵向（vertical）\r\n    TransitionProperties[\"DIRECTION\"] = \"--lilith-transition-direction\";\r\n    // 图形密度，每图形之间的间隔，该值越大则图形密度越低\r\n    TransitionProperties[\"DENSITY\"] = \"--lilith-transition-density\";\r\n    // 当前过渡位置\r\n    TransitionProperties[\"POSITION\"] = \"--lilith-transition-position\";\r\n    // 过渡风格，淡入（fade-in）、淡出（fade-out）、淡入淡出（fade-in-out）\r\n    TransitionProperties[\"STYLE\"] = \"--lilith-transition-style\";\r\n    // 图形最大值，大于 0 的数值，若未设置或小于等于 0，则跟随图形密度\r\n    TransitionProperties[\"MAX_SIZE\"] = \"--lilith-transition-max-size\";\r\n})(TransitionProperties || (TransitionProperties = {}));\r\nvar TransitionDirection;\r\n(function (TransitionDirection) {\r\n    TransitionDirection[\"HORIZONTAL\"] = \"horizontal\";\r\n    TransitionDirection[\"VERTICAL\"] = \"vertical\";\r\n})(TransitionDirection || (TransitionDirection = {}));\r\nvar TransitionStyle;\r\n(function (TransitionStyle) {\r\n    TransitionStyle[\"FADE_IN\"] = \"fade-in\";\r\n    TransitionStyle[\"FADE_OUT\"] = \"fade-out\";\r\n    TransitionStyle[\"FADE_IN_OUT\"] = \"fade-in-out\";\r\n})(TransitionStyle || (TransitionStyle = {}));\r\nconst lilith_properties = s({\r\n    [TransitionProperties.DIRECTION]: {\r\n        name: TransitionProperties.DIRECTION,\r\n        initialValue: TransitionDirection.HORIZONTAL,\r\n        syntax: n.get_values(TransitionDirection).join(\" | \"),\r\n        inherits: true,\r\n        ...o,\r\n    },\r\n    [TransitionProperties.COLOR]: {\r\n        name: TransitionProperties.COLOR,\r\n        inherits: true,\r\n        syntax: \"<color>\",\r\n        initialValue: \"#000\",\r\n        ...r,\r\n    },\r\n    [TransitionProperties.DENSITY]: {\r\n        name: TransitionProperties.DENSITY,\r\n        inherits: true,\r\n        syntax: \"<length> | <length-percentage>\",\r\n        initialValue: \"100px\",\r\n        ...u,\r\n    },\r\n    [TransitionProperties.LENGHT]: {\r\n        name: TransitionProperties.LENGHT,\r\n        initialValue: \"200px\",\r\n        syntax: \"<length> | <length-percentage>\",\r\n        inherits: true,\r\n        ...u,\r\n    },\r\n    [TransitionProperties.POSITION]: {\r\n        name: TransitionProperties.POSITION,\r\n        initialValue: \"0\",\r\n        syntax: \"<length> | <length-percentage>\",\r\n        inherits: false,\r\n        ...u,\r\n    },\r\n    [TransitionProperties.STYLE]: {\r\n        name: TransitionProperties.STYLE,\r\n        initialValue: TransitionStyle.FADE_IN,\r\n        syntax: n.get_values(TransitionStyle).join(\" | \"),\r\n        inherits: true,\r\n        ...o,\r\n    },\r\n    [TransitionProperties.MAX_SIZE]: {\r\n        name: TransitionProperties.MAX_SIZE,\r\n        initialValue: \"0\",\r\n        syntax: \"<length> | <length-percentage>\",\r\n        inherits: true,\r\n        ...u,\r\n    },\r\n});\n\ntry {\r\n    const meta = document.querySelector(\"meta[name='lilith-debug']\");\r\n    let module_url = import.meta.url;\r\n    if (meta && meta.content === \"true\") {\r\n        module_url += `${module_url.includes(\"?\") ? \"&\" : \"?\"}lilith-debug=true`;\r\n    }\r\n    // 注册自定义属性，并添加 worklet 模块。\r\n    i(lilith_properties);\r\n    CSS.paintWorklet.addModule(module_url);\r\n    if (meta && meta.content === \"true\") {\r\n        console.info(\"[lilith][transition] properties initialized!\");\r\n    }\r\n}\r\ncatch (e) {\r\n    // 作为 worklet 模块加载时，初始化相关函数，并注册 paint。\r\n    const debug_mode = import.meta.url.includes(\"lilith-debug=true\");\r\n    /**\r\n     * 将百分比单位转化为像素单位。\r\n     * @param value 值对象\r\n     * @param ref 参照长度，px\r\n     */\r\n    function to_pixel(value, ref) {\r\n        if (value.unit === \"px\") {\r\n            return value;\r\n        }\r\n        else {\r\n            return new CSSUnitValue((value.value * ref) / 100, \"px\");\r\n        }\r\n    }\r\n    /**\r\n     * 一次性计算出所有的半径，只需计算一行即可。\r\n     * @param position 当前过渡进度\r\n     * @param length 渐变长度\r\n     * @param total_length 总长，根据 --lilith-transition-direction 不同而不同\r\n     * @param style 渐变风格\r\n     * @param max_size 最大半径\r\n     * @param density 网点间隔\r\n     * @returns\r\n     */\r\n    function calc_all_radius(position, length, total_length, style, max_size, density) {\r\n        const offset = (total_length / 2) % density;\r\n        position += offset;\r\n        const result = new Array(Math.ceil(total_length / density) + 1)\r\n            .fill(0)\r\n            .map((_, index) => {\r\n            const ref = index * density;\r\n            const offset = Math.abs(position - ref);\r\n            return (style === TransitionStyle.FADE_IN && ref <= position) ||\r\n                (style === TransitionStyle.FADE_OUT && ref >= position)\r\n                ? max_size\r\n                : offset >= length\r\n                    ? 0\r\n                    : (1 - offset / length) * max_size;\r\n        });\r\n        return result;\r\n    }\r\n    // 绘制菱形，TODO: 逻辑待优化\r\n    function draw_diamond(ctx, rect) {\r\n        const { width, height } = {\r\n            width: rect.width / 2,\r\n            height: rect.height / 2,\r\n        };\r\n        ctx.beginPath();\r\n        ctx.moveTo(rect.x, rect.y - height);\r\n        ctx.lineTo(rect.x + width, rect.y);\r\n        ctx.lineTo(rect.x, rect.y + height);\r\n        ctx.lineTo(rect.x - width, rect.y);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    t(\"lilith-transition\", lilith_properties, (ctx, geom, properties) => {\r\n        const direction = properties.get(TransitionProperties.DIRECTION)\r\n            .value;\r\n        const is_horizontal = direction === TransitionDirection.HORIZONTAL;\r\n        const ref = direction === TransitionDirection.HORIZONTAL ? geom.width : geom.height;\r\n        const position = to_pixel(properties.get(TransitionProperties.POSITION), ref).value;\r\n        const length = to_pixel(properties.get(TransitionProperties.LENGHT), ref).value;\r\n        const density = to_pixel(properties.get(TransitionProperties.DENSITY), ref).value;\r\n        const style = properties.get(TransitionProperties.STYLE)\r\n            .value;\r\n        let max_size_value = properties.get(TransitionProperties.MAX_SIZE);\r\n        if (max_size_value.value <= 0) {\r\n            max_size_value = properties.get(TransitionProperties.DENSITY);\r\n        }\r\n        const max_size = to_pixel(max_size_value, ref).value;\r\n        const color = properties.get(TransitionProperties.COLOR).toString();\r\n        const offset = {\r\n            x: (geom.width / 2) % density,\r\n            y: (geom.height / 2) % density,\r\n        };\r\n        const radius = calc_all_radius(position, length, ref, style, max_size, density);\r\n        if (!is_horizontal) {\r\n            ctx.transform(1, 0, 0, 1, geom.width, 0);\r\n            ctx.rotate(Math.PI / 2);\r\n        }\r\n        ctx.fillStyle = color;\r\n        for (let y = -offset.y; y <= geom.height; y += density) {\r\n            radius.forEach((r, i) => {\r\n                if (r) {\r\n                    draw_diamond(ctx, {\r\n                        x: i * density - offset.x,\r\n                        y,\r\n                        width: r * 2,\r\n                        height: r * 2,\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (debug_mode) {\r\n        console.info(\"[lilith][transition] paint initialized!\");\r\n    }\r\n}\n//# sourceMappingURL=index.js.map\n"],"names":[],"mappings":"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"}